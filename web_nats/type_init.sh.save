#!/bin/bash


npm cache clean --force
# Borrar la carpeta node_modules y el archivo package-lock.json si existen
rm -rf node_modules package-lock.json

# Inicializar el proyecto con npm (si no lo has hecho ya)
npm init -y

# Instalar las dependencias esenciales
npm install jwt-decode
npm install --save-dev @vitejs/plugin-react
npm install uuid@latest
npm i --save-dev @types/node
npm install typescript@latest --save-dev
npm install vite@latest --save-dev
npm install --save-dev @types/uuid
npm install react react-dom react-router-dom
npm install react-router-dom axios jsonwebtoken uuid
npm install eslint@^8.0.0 --save-dev
npm install eslint-plugin-prettier@^5.0.0 --save-dev
npm install eslint-config-prettier@^8.0.0 --save-dev

# Instalar los tipos para react-router-dom y vite
npm install @types/react-router-dom --save-dev
npm install vite --save-dev

# Instalar dependencias de TypeScript
npm install typescript --save-dev

# Instalar las dependencias adicionales para el proyecto
npm install @vitejs/plugin-react --save-dev
npm install dotenv --save-dev

# POor si existen vulnerabilidades
npm audit fix --force

# Crear o actualizar tsconfig.json
echo '{
  "compilerOptions": {
    "allowJs": true,
    "checkJs": false,
    "strict": true,
"lib": ["dom", "esnext"],
    "module": "ESNext",
    "moduleResolution": "Node",
    "jsx": "react-jsx",
    "baseUrl": "./src",
    
    "outDir": "./dist",
    
    "target": "esnext",    
    
    "esModuleInterop": true,
    "skipLibCheck": true,
    "typeRoots": ["node_modules/@types"],
    "types": ["vite/client", "node"]
  },
  "include": ["src/**/*", "vite.config.ts"],
  "exclude": ["node_modules"]
}' > tsconfig.json

# Crear el archivo .env
echo 'VITE_API=localhost
VITE_PORT=8081' > .env
# Instalar todos los módulos de npm y asegurarse de que todo está actualizado
npm install
